/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run main.nf -profile dkfz_cluster_hg38,singularity --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_contact     = 'Kübra Narcı kuebra.narci@dkfz-heidelberg.de'
    config_profile_name        = 'Test profile for DKFZ cluster'
    config_profile_description = 'Test dataset for to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 32
    max_memory = '500.GB'
    max_time   = '48.h'

    // Input data
    input  = 'assets/samplesheet_nocontrol.csv'

    // workflow parameters
    outdir                     = "results"

    runWithFakeControl         = true
    
    // estimatePurityPloidy
    minLim                     = 0.47
    maxLim                     = 0.53
    min_length_purity          = 1000000
    min_hetSNPs_purity         = 0       // default 500 !!
    dh_stop                    = "max"
    min_length_dh_stop         = 1000000
    dh_zero                    = "no"
    purity_min                 = 0.3
    purity_max                 = 1.0
    ploidy_min                 = 1.0
    ploidy_max                 = 6.5
    local_minium_upper_boundary_shift = 0.1

    // Reference //
    data_path                  = "/omics/odcf/reference_data/legacy/ngs_share/assemblies/hg_GRCh38"
    fasta                      = '/omics/odcf/reference_data/legacy/ngs_share/assemblies/hg_GRCh38/sequence/GRCh38_decoy_ebv_alt_hla_phiX.fa'
    fasta_fai                  = '/omics/odcf/reference_data/legacy/ngs_share/assemblies/hg_GRCh38/sequence/GRCh38_decoy_ebv_alt_hla_phiX.fa.fai'
    chrom_sizes                = '/omics/odcf/reference_data/legacy/ngs_share/assemblies/hg_GRCh38/stats/GRCh38_decoy_ebv_alt_hla_phiX.fa.chrLenOnlyACGT_realChromosomes.tsv'
    chr_prefix                 = "chr"
    //contig_file              = "assets/GRCh38_decoy_ebv_phiX_alt_hla_chr.contig.bed"

    // Beagle reference
    beagle_reference           = "${params.data_path}/tools_data/Beagle/1000genomes"
    beagle_genetic_map         = "${params.data_path}/databases/genetic_maps"
    beagle_ref_ext             = "bref3" // vcf | bref | bref3
    beagle_map_ext             = "CHR.map"

    // Annotation files
    dbsnp_snv                  = "${params.data_path}/databases/dbSNP/dbSNP_151_GRCh38.p7/00-All_v151_GRCh38.SNV.vcf.gz"
    mapability_file            = "${params.data_path}/stats/mappability_m2e2/GRCh38_Mappability_Align_100mer_m2e2.ALT_HLA.bedGraph.gz"
    replication_time_file      = "${params.data_path}/databases/ENCODE/RepliSeq/time_mean_10KB.Rda"
    gc_content_file            = "${params.data_path}/stats/gc_content_hg38.txt"
    gene_annotation_file       = "${params.data_path}/tools_data/ACEseq/INFORM_druggable_genes.hg38.tsv"

    // get breakpoints/ PSCBS gaps
    centromer_file             = "${params.data_path}/stats/gap_with_centromeres.header.txt"

    // HDR estimation
    blacklist_file             = "assets/artifact.homoDels.potentialArtifacts.hg38.txt"
    cytobands_file             = "assets/hg38_cytoBand.txt"

    //No control FAKE CNV file directory
    fake_control               = "/omics/groups/OE0608/internal/kubran/anno_cnv/hg38_male_fake_control/"
    fake_control_prefix        = "fake"
 }

// Perform work directory cleanup when the run has succesfully completed
 cleanup = true

// Reduce the job submit rate to about 5 per second, this way the server won't be bombarded with jobs

singularity {
  enabled = true
  cacheDir = "/omics/groups/OE0608/internal/kubran/singularity"
  autoMounts = true
  runOptions = "-B /omics/groups -B /omics/odcf/analysis -B /omics/odcf/project -B /omics/odcf/reference_data"
}
env {
    SINGULARITY_CACHEDIR="/omics/groups/OE0608/internal/kubran/singularity"
    SINGULARITY_LIBRARYDIR="/omics/groups/OE0608/internal/kubran/singularity/library"
}

process {
  executor = 'lsf'
  scratch = '$SCRATCHDIR/$LSB_JOBID'

}
executor {
  name = 'lsf'
  perTaskReserve = false
  perJobMemLimit = true
  submitRateLimit = '30 sec'
  queueSize=50
  }

