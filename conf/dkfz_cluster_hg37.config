/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run main.nf -profile dkfz_cluster_hg37,singularity --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_contact     = 'Kübra Narcı kuebra.narci@dkfz-heidelberg.de'
    config_profile_name        = 'Test profile for DKFZ cluster'
    config_profile_description = 'Test dataset for to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 32
    max_memory = '500.GB'
    max_time   = '48.h'

    // Input data
    input  = 'testdata/samplesheet.csv'

    // workflow parameters
    outdir                     = "results37"

    minLim                     = 0.47
    maxLim                     = 0.53
    min_length_purity          = 1000000
    min_hetSNPs_purity         = 0       // default 500 !!
    dh_stop                    = "max"
    min_length_dh_stop         = 1000000
    dh_zero                    = "no"
    purity_min                 = 0.3
    purity_max                 = 1.0
    ploidy_min                 = 1.0
    ploidy_max                 = 6.5
    local_minium_upper_boundary_shift = 0.1

    // Reference //
    data_path                  = "/omics/odcf/reference_data/legacy/ngs_share/assemblies/hg19_GRCh37_1000genomes"
    fasta                      = '/omics/odcf/reference_data/legacy/ngs_share/assemblies/hg19_GRCh37_1000genomes/sequence/1KGRef/hs37d5.fa'
    fasta_fai                  = '/omics/odcf/reference_data/legacy/ngs_share/assemblies/hg19_GRCh37_1000genomes/sequence/1KGRef/hs37d5.fa.fai'
    chrom_sizes                = '/omics/odcf/reference_data/legacy/ngs_share/assemblies/hg19_GRCh37_1000genomes/stats/hs37d5.fa.chrLenOnlyACGT_realChromosomes.tab'
    chr_prefix                 = ""

    // Beagle reference
    beagle_ref                 = "${params.data_path}/tools_data/Beagle"
    plink_map                  = "${params.data_path}/tools_data/genetic_maps"
    //beagle_ref_ext             = "bref3" // vcf | bref | bref3
    //beagle_map_ext             = "map"

    // Annotation files
    dbsnp_snv                  = "${params.data_path}/databases/dbSNP/dbSNP_135/00-All.SNV.vcf.gz"
    mapability_file            = "${params.data_path}/databases/UCSC/wgEncodeCrgMapabilityAlign100mer_chr.bedGraph.gz"
    replication_time_file      = "${params.data_path}/databases/ENCODE/ReplicationTime_10cellines_mean_10KB.Rda"
    gc_content_file            = "${params.data_path}/stats/hg19_GRch37_100genomes_gc_content_10kb.txt"
    gene_annotation_file       = "${params.data_path}/tools_data/ACEseq/INFORM_druggable_genes.csv"

    // get breakpoints/ PSCBS gaps
    centromer_file             = "${params.data_path}/stats/hg19_gaps.txt"

    // HDR estimation
    blacklist_file             = "assets/hg19/artifact.homoDels.potentialArtifacts.txt"
    cytobands_file             = "assets/hg19/hg19_cytoBand.txt"
}

// Perform work directory cleanup when the run has succesfully completed
 cleanup = true

// Reduce the job submit rate to about 5 per second, this way the server won't be bombarded with jobs

singularity {
  enabled = true
  cacheDir = "/omics/groups/OE0608/internal/kubran/singularity"
  autoMounts = true
  runOptions = "-B /omics/groups -B /omics/odcf/analysis -B /omics/odcf/project -B /omics/odcf/reference_data -B /omics/groups/OE0608/internal/kubran/"
}
env {
    SINGULARITY_CACHEDIR="/omics/groups/OE0608/internal/kubran/singularity"
    SINGULARITY_LIBRARYDIR="/omics/groups/OE0608/internal/kubran/singularity/library"
}

process {
  executor = 'lsf'
  scratch = '$SCRATCHDIR/$LSB_JOBID'

}
executor {
  name = 'lsf'
  perTaskReserve = false
  perJobMemLimit = true
  submitRateLimit = '30 sec'
  queueSize=50
  }
